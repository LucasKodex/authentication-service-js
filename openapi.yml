openapi: 3.1.0
info:
  title: Kodex - Authentication Service
  description: "Username and password based authentication"
  contact:
    email: lucas.kodex.dev@gmail.com
  license:
    name: MIT
    url: https://opensource.org/license/mit
  version: 0.0.0
tags:
  - name: Authentication
paths:

  /signup:
    post:
      tags:
        - Authentication
      summary: "Create a new account"
      description: "Register a new account creating a session and giving a refresh token"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCredentials"
      responses:
        "201":
          description: "Account created successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RefreshToken"
        "400":
          description: "Invalid input"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                name: "ValidationError"
                message: "Login must have only valid characters [0-9a-zA-Z._-]"
        "403":
          description: "Login already taken"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                name: "UniqueConstraintError"
                message: "Login new.login is already registered"
        "5XX":
          description: "Something wrong happend"
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ErrorResponse"

  /login:
    post:
      tags:
        - Authentication
      summary: "Authenticate and get a new refresh token"
      description: "Gets a new refresh token revoking old sessions and creating a new one"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCredentials"
      responses:
        "200":
          description: "Login successful"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RefreshToken"
        "400":
          description: "Invalid input"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                name: "ValidationError"
                message: "Login must be a string (even if its made of numbers only)"
        "403":
          description: "Invalid credentials"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                name: "UserNotFound"
                message: "Doesn't exist any user with the login XPTO"
        "5XX":
          description: "Something wrong happend"
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ErrorResponse"

  /exchange-refresh-token:
    post:
      tags:
        - Authentication
      summary: "Exchange refresh token for an access token"
      description: "Exchange the refresh token for an access token. The refresh token stills valid"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefreshToken"
      responses:
        "200":
          description: "Access token created successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessToken"
        "400":
          description: "Invalid input"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                name: "InvalidJwtToken"
                message: "Can't parse the JWT token"
        "403":
          description: "Invalid JWT signature"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                name: "InvalidSignature"
                message: "Invalid JWT signature"
        "5XX":
          description: "Something wrong happend"
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ErrorResponse"

  /revoke-refresh-token:
    post:
      tags:
        - Authentication
      summary: "Revoke a refresh token"
      description: "Revoke a refresh token by revoking the its session"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefreshToken"
      responses:
        "200":
          description: "Refresh token revoked successfully"
        "400":
          description: "Invalid token"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                name: "InvalidJwtToken"
                message: "Can't parse the JWT token"
        "5XX":
          description: "Something wrong happend"
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/ErrorResponse"

components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        name:
          type: string
        message:
          type: string
      required:
        - name
        - message
    UserCredentials:
      type: object
      properties:
        login:
          type: string
          example: username.login
        password:
          type: string
          format: password
          example: p455w0rd
      required:
        - login
        - password
    RefreshToken:
      type: object
      properties:
        refresh_token:
          type: string
          format: jwt
          example: "eeyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJsb2dpbiI6IkxvcmVtIn0.4qMQrCHPTqPBgDDhDsBCbK6kZtTCNzPO8Aq76-LUOzs"
      required:
        - refresh_token
    AccessToken:
      type: object
      properties:
        access_token:
          type: string
          format: jwt
          example: "eeyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJsb2dpbiI6IkxvcmVtIn0.4qMQrCHPTqPBgDDhDsBCbK6kZtTCNzPO8Aq76-LUOzs"
      required:
        - access_token
